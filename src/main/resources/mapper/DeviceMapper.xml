<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlcm.server.dao.DeviceMapper">
    <resultMap id="BaseResultMap" type="com.zlcm.server.model.bean.Device">
        <id column="did" jdbcType="INTEGER" property="did" />
        <result column="mac" jdbcType="VARCHAR" property="mac" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="dlatitude" jdbcType="DECIMAL" property="dlatitude" />
        <result column="dlongitude" jdbcType="DECIMAL" property="dlongitude" />
        <result column="ip" jdbcType="VARCHAR" property="ip" />
        <result column="state" jdbcType="TINYINT" property="state" />
        <result column="household" jdbcType="INTEGER" property="household" />
        <result column="desc" jdbcType="VARCHAR" property="desc" />
        <result column="province" jdbcType="VARCHAR" property="province" />
        <result column="city" jdbcType="VARCHAR" property="city" />
        <result column="area" jdbcType="VARCHAR" property="area" />
    </resultMap>
    <sql id="Base_Column_List">
        did, mac, address, dlatitude, dlongitude, ip, state, household, `desc`, province, city,
        area
    </sql>
    <select id="get" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from zlcm_device
        where did = #{did,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPK" parameterType="java.lang.Integer">
        delete from zlcm_device
        where did = #{did,jdbcType=INTEGER}
    </delete>
    <insert id="save" parameterType="com.zlcm.server.model.bean.Device">
        insert into zlcm_device
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="did != null">
                did,
            </if>
            <if test="mac != null">
                mac,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="dlatitude != null">
                dlatitude,
            </if>
            <if test="dlongitude != null">
                dlongitude,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="household != null">
                household,
            </if>
            <if test="desc != null">
                `desc`,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="area != null">
                area,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="did != null">
                #{did,jdbcType=INTEGER},
            </if>
            <if test="mac != null">
                #{mac,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="dlatitude != null">
                #{dlatitude,jdbcType=DECIMAL},
            </if>
            <if test="dlongitude != null">
                #{dlongitude,jdbcType=DECIMAL},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
            <if test="household != null">
                #{household,jdbcType=INTEGER},
            </if>
            <if test="desc != null">
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.zlcm.server.model.bean.Device">
        update zlcm_device
        <set>
            <if test="mac != null">
                mac = #{mac,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="dlatitude != null">
                dlatitude = #{dlatitude,jdbcType=DECIMAL},
            </if>
            <if test="dlongitude != null">
                dlongitude = #{dlongitude,jdbcType=DECIMAL},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="household != null">
                household = #{household,jdbcType=INTEGER},
            </if>
            <if test="desc != null">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=VARCHAR},
            </if>
        </set>
        where did = #{did,jdbcType=INTEGER}
    </update>

  <select id="findAll" resultType="java.util.List">
    SELECT * FROM zlcm_device
  </select>

  <select id="getCount" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM zlcm_device
  </select>

  <select id="getPageList" parameterType="java.lang.Integer" resultType="com.zlcm.server.model.bean.Device">
    SELECT * FROM zlcm_device a  JOIN (select did from zlcm_device limit #{page},#{size}) b ON a.did = b.did
  </select>

  <select id="peripheryDevices" parameterType="java.util.Map" resultType="com.zlcm.server.model.apprep.AppDevice">
    SELECT did,address,ip,dlatitude,dlongitude,household FROM zlcm_device WHERE
    state = 0 AND
    dlatitude > #{lat}-(#{range}/111) AND
    dlatitude <![CDATA[ < ]]> #{lat}+(#{range}/111) AND
    dlongitude > #{lng}-(#{range}/111) AND
    dlongitude <![CDATA[ < ]]> #{lng}+(#{range}/111)
    ORDER BY ACOS(SIN((#{lat} * pi()) / 180 ) *SIN((dlatitude * pi()) / 180 ) +COS((#{lat} * pi()) / 180 ) * COS((dlatitude * pi()) / 180 ) *COS((#{lng}* pi()) / 180 - (dlongitude * pi()) / 180 ) ) * 6380
    ASC LIMIT #{size}
  </select>
    <select id="peripheryDevicesImg" parameterType="java.util.Map" resultType="com.zlcm.server.model.apprep.AppDevice">
    SELECT did,address,ip,dlatitude,dlongitude,household FROM zlcm_device WHERE
    state = 0 AND
    dlatitude > #{lat}-(#{range}/111) AND
    dlatitude <![CDATA[ < ]]> #{lat}+(#{range}/111) AND
    dlongitude > #{lng}-(#{range}/111) AND
    dlongitude <![CDATA[ < ]]> #{lng}+(#{range}/111)
    ORDER BY ACOS(SIN((#{lat} * pi()) / 180 ) *SIN((dlatitude * pi()) / 180 ) +COS((#{lat} * pi()) / 180 ) * COS((dlatitude * pi()) / 180 ) *COS((#{lng}* pi()) / 180 - (dlongitude * pi()) / 180 ) ) * 6380
    ASC LIMIT #{page},#{size}
  </select>

  <select id="findHouseholdNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT zd.household FROM zlcm_device zd WHERE zd.did = #{did,jdbcType=INTEGER}
  </select>

  <select id="findDevicesList" resultType="com.zlcm.server.model.apprep.AppDevice" parameterType="java.util.Map">
    SELECT did,address,ip,dlatitude,dlongitude,household FROM zlcm_device d WHERE d.province = #{province,jdbcType=INTEGER}
    AND d.city = #{city,jdbcType=INTEGER}
    AND d.area = #{area,jdbcType=INTEGER}
    <if test="list != null">
    UNION
    SELECT did,address,ip,dlatitude,dlongitude,household FROM zlcm_device d
    WHERE d.did IN
    <foreach collection="list" index="index" item="did" open="(" separator="," close=")">
      #{did,jdbcType=INTEGER}
    </foreach>
    </if>
    limit #{page},#{size}
  </select>

  <select id="findDevices" resultType="com.zlcm.server.model.bean.Device" parameterType="java.util.List">
    SELECT * FROM zlcm_device d
    WHERE d.did IN
    <foreach collection="list" index="index" item="did" open="(" separator="," close=")">
      #{did,jdbcType=INTEGER}
    </foreach>
  </select>

</mapper>